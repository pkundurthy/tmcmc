 Last Updated: 2011-Oct-12 13:22:05


+ myderivedfunc.py

+ myfunc.py

+ postmcmc.py
     covcorStats(File, FileTag):
     plotTrace(File1,File2, **keywords):
     autocorMCMC(File, lowtol, jmax, OutStatFile, mkPlotsFlag, **keywords):

+ MTQ_2010.py
     MultiTransitQuick_circular_rprs_vm(ModelParams,ObservedData):
     MultiTransitQuick_circular_depth_vm(ModelParams,ObservedData):
     transitquick_circ_depth(t,p):
     transitquick_circ_rprs(t,p):

+ MTQ_2011.py
     MTQ_multidepth_tduration(ModelParams,ObservedData):
     MTQ_getDerivedParams(D,tT,tG,u1,u2,Period):
     MTQ_FilterParams(RefFilt,Tags,ModelParams):

+ mcmc.py
     MakeMCMCheader(ModelParams):
     printMCMCline(param_tagorder,ModelParams,istep,frac,acr,chi1,chi2):
     chisq(fobs,sig,fmodel):
     fn_randG(mu,sig):
     fn_randU(lower,upper):
     AdaptiveMultiplierCheck(ModelParams):
     StepperFunction(ModelParams,frac):
     mcmc_mh_adapt(Nsteps,FunctionName,ObservedData,ModelParams,NuisanceData,BoundParams,writeDtCoeffFlag,resumeFlag,OutFile,ShowOutput):
     mcmc_mh_adapt_derived(Nsteps,FunctionName,ObservedData,ModelParams,NuisanceData,BoundParams,writeDtCoeffFlag,resumeFlag,printDerivedFlag,OutFile,DerivedFunctionName,DerivedFile,ShowOutput):
     DetrendData(ObservedData,ModelData,NuisanceData,OutFile,writeDtCoeffFlag):
     LinearLeastSq_coeff(A,B):
     ApplyBounds(ModelParams,BoundParams):

+ derived_MTQ_2011.py
     returnDerivedLine_MTQ2011(ModelParams,istep,keyList0):
     printDerived_MTQ_2011(STARTFILE,MCMCfile,DerivedFile):
     filterMatchD(TransitTag,Tags,ModelParams):

+ misc.py
     String2Bool(inStr):
     String2IntFloat(inStr):

+ iomcmc.py
     MakeModelParsContinue(par0,par1,ModelPars):
     ReadStartParams(filename):
     ReadSingleDataFile(file):
     ReadDataFile(file):
     ReadMultiList(listfile):
     ReadColFloat(file,separator,comment):
     checkFileExists(file):
     ReadDetrendFile(file):
     ReadBoundsFile(file):
     ReadHeaderMCMC(line):
     ReadMCMCline(line,header):
     WriteLowestChisq(file,ModelParams,OutFileName,ShowOutput):
     CheckContinue(file,ModelPars):
     ReadMCMCheader(OutFile):
     PrintModelParams(ModelParams,OutFile):
     ReadBoundFile(file):

+ myboundfunc.py

+ iobinning.py
     ReadData(file):
     WriteLightCurveFile(OutFileName,file,IngressTime,EgressTime):
     WriteNuisanceFile(OutFileName,file):
     WriteLCNUSoutlierRejection(OutFileTag,file,IngressTime,EgressTime):

+ func_example.py
     quad(ModelParams,ObservedData):

+ runminuit.py
     RunMinuit(FunctionName,ObservedData,ModelParams,NuisanceData,BoundParams,tolnum,OutFile):
     f_chisquared(FunctionName,ObservedData,ModelParams,NuisanceData,BoundParams):

+ iopostmcmc.py
     readStatHeaders(FileName):
     readStatsFile(FileName):
     readALLStats(**kwargs):
     isNonParam(key):
     getNparams(hdrkeys):
     readMCMChdr(filename):
     getPars(filename):
     readMCMC(filename):
     read1parMCMC(filename,parname):
     cropMCMC(mcmcfile,outfile,cropperc):
     makeStartFromExplore(ListOfChains,StablePerc,SampleParamFile,OutputParamFile):
     printErrors(MCMCfile,BestfitFile,OutputFile):

+ tqessential.py
     ekepler(m,e):
     kepler(m,e):
     ellke(k):
     ellpic_bulirsch(n,k):
     occultquad(z,u1,u2,p0):
     newtraph6(x,a5,a4,a0):
     tqsextic(x,a5,a4,a0):
     computeRpRs(u1,u2,tT,tG,D):
     LDC_v2u(v1,v2):
     getFilterTags(StringArray):
     getTags(ModelParams):
     computePeriod(ModelParams):
     TransitLC(timeIn,F0,inc,aRs,Period,RpRs,u1,u2,T0):
     slopefitquick(x,y):

+ plotmcmc.py
     returnTsub(TSTAMP):
     rangeMidpoints(x):
     return1Dfrom2D(arr2D):
     singleJC(data1,data2):
     JC(par1,par2,dataMCMC):
     checkFormatTT(data,parName,**kwargs):
     robust1sigma(x):
     getPlotLoc(d1,d2,spaceTopR):
     trianglePlotTT(DataFile,Stats,spaceTopR,**kwargs):

+ binning.py
     MedianMeanOutlierRejection(indata, cutoff, choice):
     makeGridRange(x0,xEnd,bin):
     isInRange(x,x0,x1):
     GridBinning(x,y,yerr,bin):

+ bound_MTQ_2010.py
     bound_u1plusu2_2010(ModelParams):
     bound_u1_2010(ModelParams):
     bound_v1_2010(ModelParams):
     bound_v1plusv2_2010(ModelParams):
     bound_D_2010(ModelParams):
     bound_RpRsSQ_2010(ModelParams):
     bound_tT_2010(ModelParams):
     bound_tG_2010(ModelParams):
     bound_bfraction_2010(ModelParams):
     bound_vfraction_2010(ModelParams):
     bound_vfraction_withD_2010(ModelParams):
     bound_bfraction_withD_2010(ModelParams):
     get_RpRsSQ_2010(ModelParams):
     bound_a0(ModelParams):
     bound_a1plusa2sq(ModelParams):

+ bound_MTQ_2011.py
     bound_v1_2011(ModelParams):
     bound_v1plusv2_2011(ModelParams):
     bound_D_2011(ModelParams):
     bound_tT_2011(ModelParams):
     bound_tG_2011(ModelParams):
     bound_vfraction_MTQ_2011(ModelParams):
     bound_bfraction_MTQ_2011(ModelParams):
     bound_bOVERaRs_MTQ_2011(ModelParams):

